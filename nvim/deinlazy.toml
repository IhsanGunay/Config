[[plugins]]
repo = 'Shougo/denite.nvim'
on_cmd = 'Denite'
hook_add = '''
  nnoremap [Space]g
  \ <Cmd>Denite -buffer-name=search
  \ -no-empty grep<CR>

  nnoremap [Window]<Space>b
  \ <Cmd>Denite 
  \ -no-empty -split=top buffer:<CR>

  nnoremap [Window]<Space>d
  \ <Cmd>Denite file/rec:<CR>

  nnoremap [Window]<Space>h
  \ <Cmd>Denite file/rec:~/<CR>

  nnoremap [Window]<Space>f
  \ <Cmd>Denite file/rec:~/.config/<CR>

  nnoremap [Window]<Space>s
  \ <Cmd>Denite file/rec:~/Slides/<CR>

  xnoremap <silent> *
  \ "qy:Denite -input=`@q` -buffer-name=search -search line<CR>

  nnoremap <silent><expr> *
  \ wordcount().chars > 30000 ?
  \ ":\<C-u>DeniteCursorWord -buffer-name=search -search line/external\<CR>" :
  \ ":\<C-u>DeniteCursorWord -buffer-name=search -search line\<CR>"

  " nnoremap <silent><expr> [Window]s
  " \ finddir('.git', ';') != '' ?
  " \ ":\<C-u>Denite -sorters=sorter/rank -unique
  " \  file/point file/old file/dirty file/git file file:new\<CR>" :
  " \ ":\<C-u>Denite -sorters=sorter/rank -unique

  " nnoremap <silent> n
  " \ <Cmd>Denite -buffer-name=search -resume<CR>

  nnoremap <C-t>
  \ <Cmd>Denite -buffer-name=deol -split=floating
  \ -cursor-pos=`tabpagenr()-1` deol:zsh<CR>

  nnoremap <C-p> <Cmd>Denite change jump<CR>
  nnoremap <C-i> <Cmd>DeniteCursorWord help<CR>
'''
hook_source = '''
source ~/.config/nvim/settings/denite.vimrc
'''

[[plugins]]
repo = 'Shougo/defx.nvim'
on_cmd = 'Defx'
depends = ['defx-icons', 'defx-git']
hook_add = '''
nnoremap - <Cmd>Defx `escape(expand('%:p:h'), ' :')` -search=`expand('%:p')`<CR>
'''
hook_post_source = '''
  call defx#custom#option('_', {
  \ 'columns': 'indent:git:icons:filename:mark',
  \ 'ignored_files': '.git,*cache*,.pki',
  \ 'vertical_preview': 1,
  \ 'auto_cd': 1,
  \ 'toggle': 1,
  \ 'winwidth': 30,
  \ 'split': 'vertical',
  \ 'direction': 'topleft',
  \ })
'''

[[plugins]]
repo = 'Shougo/deol.nvim'
on_cmd = 'Deol'
depends = 'denite.nvim'
on_source = ['defx.nvim', 'denite.nvim']
hook_add = '''
nnoremap [Window]t <Cmd>Deol zsh -no-start-insert<CR>
'''
hook_source = '''
  let g:deol#prompt_pattern = '\w*% '
  let g:deol#shell_history_path = '~/.cache/zsh/history'
  let g:deol#extra_options = {'term_kill': 'kill'}
'''

[[plugins]]
repo = 'Shougo/deoplete.nvim'
on_event = 'InsertEnter'
hook_post_source = '''
  source ~/.config/nvim/settings/deoplete.vimrc
  call deoplete#enable()
'''

[[plugins]]
repo = 'davidhalter/jedi-vim'
on_ft = 'python'
hook_source = '''
  let g:jedi#completions_enabled = 0
  let g:jedi#use_splits_not_buffers = "right"
'''


[[plugins]]
repo = 'hkupty/iron.nvim'
on_cmd = 'IronRepl'
hook_add = '''
nnoremap [Window]r :IronRepl<CR>
'''
hook_source = '''
  nnoremap [Space]is <Plug>(iron-send-motion)
  nnoremap [Space]if magg<Plug>(iron-send-motion)G`a
  nnoremap [Space]il <Plug>(iron-send-line)
  nnoremap [Space]i<CR> <Plug>(iron-cr)
  nnoremap [Space]ii <Plug>(iron-interrupt)
  nnoremap [Space]ic <Plug>(iron-clear)
  nnoremap [Space]iq <Plug>(iron-exit)

  lua << EOF
  local iron = require('iron')
  iron.core.set_config {
      repl_open_cmd = "vertical split",
      preferred = {
          python = "ipython"
      }
  }
  EOF
'''

[[plugins]]
repo = 'mattn/emmet-vim'
on_ft = ['html', 'vue']
hook_source = '''
  inoremap   <C-o>   <plug>(emmet-expand-abbr)
  nnoremap   <C-o>   <plug>(emmet-expand-abbr)
  nnoremap   [Space]o   <plug>(emmet-expand-abbr)
'''

[[plugins]]
repo = 'SirVer/ultisnips'
on_event = 'InsertCharPre'
depends = ['vim-snippets', 'deoplete.nvim']
hook_add = '''
  let g:UltiSnipsExpandTrigger = '<C-j>'
  let g:UltiSnipsJumpForwardTrigger = '<C-j>'
  let g:UltiSnipsJumpBackwardTrigger = '<C-k>'
'''

[[plugins]]
repo = 'dense-analysis/ale'
on_ft = ['html', 'css', 'javascript', 'python', 'yaml']
hook_source = '''
  let g:airline#extensions#ale#enabled = 1
  let g:ale_echo_msg_format = '[%linter%] %s [%severity%]'
  let g:ale_sign_error = '✘'
  let g:ale_sign_warning = '⚠'
  let g:ale_lint_on_text_changed = 'never'
'''

[[plugins]]
repo = 'hrsh7th/vim-eft'
on_map = {n = '<Plug>', x = '<Plug>', o = '<Plug>'}
hook_source = '''
let g:eft_ignorecase = v:true
'''
hook_add = '''
  nmap ;; <Plug>(eft-repeat)
  xmap ;; <Plug>(eft-repeat)
  nmap f <Plug>(eft-f)
  xmap f <Plug>(eft-f)
  omap f <Plug>(eft-f)
  nmap F <Plug>(eft-F)
  xmap F <Plug>(eft-F)
  omap F <Plug>(eft-F)
'''

[[plugins]]
repo = 'rhysd/accelerated-jk'
on_map = {n = '<Plug>'}
hook_add = '''
  nnoremap [Space]a <Cmd>call AccelToggle()<CR>

  let s:accel = v:false
  function! AccelToggle()
    if s:accel
      nunmap j
      nunmap k
      let s:accel = v:false
      echo ''
    else
      nmap <silent> j <Plug>(accelerated_jk_gj)
      nmap <silent> k <Plug>(accelerated_jk_gk)
      let s:accel = v:true
      echo 'Accelerated!'
    endif
  endfunc
'''
hook_source = '''
  let g:accelerated_jk_enable_deceleration = 1
  let g:accelerated_jk_acceleration_limit = 400
'''

[[plugins]]
repo = 'wsdjeg/dein-ui.vim'
on_cmd = 'DeinUpdate'

[[plugins]]
repo = 'pbrisbin/vim-mkdir'
on_event = 'BufNewFile'

[[plugins]]
repo = 'deoplete-plugins/deoplete-jedi'
on_ft = 'python'

[[plugins]]
repo = 'deoplete-plugins/deoplete-zsh'
on_ft = ['zsh', 'sh']

[[plugins]]
repo = 'cespare/vim-toml'
on_ft = 'toml'

[[plugins]]
repo = 'Shougo/deoplete-lsp'
depends = 'nvim-lsp'

[[plugins]]
repo = 'kristijanhusak/defx-git'

[[plugins]]
repo = 'kristijanhusak/defx-icons'

[[plugins]]
repo = 'honza/vim-snippets'

[[plugins]]
repo = 'neovim/nvim-lsp'

# vim: ft=vim
