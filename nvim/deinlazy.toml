[[plugins]]
repo = 'Shougo/denite.nvim'
on_cmd = 'Denite'
hook_add = '''
  nnoremap <silent> [Window]<Space>
  \ :<C-u>Denite file/rec:~/.vim/rc<CR>

  nnoremap <silent><expr> /
  \ wordcount().chars > 30000 ?
  \ ":\<C-u>Denite -buffer-name=search -start-filter
  \  -search line/external\<CR>" :
  \ ":\<C-u>Denite -buffer-name=search -start-filter -search line\<CR>"

  nnoremap <silent><expr> *
  \ wordcount().chars > 30000 ?
  \ ":\<C-u>DeniteCursorWord -buffer-name=search -search line/external\<CR>" :
  \ ":\<C-u>DeniteCursorWord -buffer-name=search -search line\<CR>"

  xnoremap <silent> *
  \ "qy:Denite -input=`@q` -buffer-name=search -search line<CR>

  nnoremap <silent><expr> [Window]s
  \ finddir('.git', ';') != '' ?
  \ ":\<C-u>Denite -sorters=sorter/rank -unique
  \  file/point file/old file/dirty file/git file file:new\<CR>" :
  \ ":\<C-u>Denite -sorters=sorter/rank -unique
  \  file/point file/old file file:new\<CR>"

  nnoremap <silent> n
  \ :<C-u>Denite -buffer-name=search -resume<CR>

  nnoremap <silent><expr> tt
  \ &filetype == 'help' ?  "g\<C-]>" :
  \ ":\<C-u>DeniteCursorWord -buffer-name=tag -immediately tag:include\<CR>"

  nnoremap <silent><expr> tp
  \ &filetype == 'help' ?
  \ ":\<C-u>pop\<CR>" : ":\<C-u>Denite jump\<CR>"

  nnoremap <silent> [Window]n :<C-u>Denite dein<CR>
  nnoremap <silent> [Window]g :<C-u>Denite ghq -default-action=cd<CR>

  nnoremap <silent> ;g
  \ :<C-u>Denite -buffer-name=search
  \ -no-empty grep<CR>

  nnoremap <silent> <C-t>
  \ :<C-u>Denite -buffer-name=deol -split=floating
  \ -cursor-pos=`tabpagenr()-1` deol:zsh<CR>

  nnoremap <silent> <C-k> :<C-u>Denite change jump<CR>
  nnoremap <silent> <C-h> :<C-u>DeniteCursorWord help<CR>
'''
hook_source = '''
source ~/.config/nvim/settings/denite.vimrc
'''

[[plugins]]
repo = 'Shougo/defx.nvim'
on_cmd = 'Defx'
depends = 'defx-icons'
hook_add = '''
nnoremap <silent> [Space]e :<C-U>:Defx -resume -buffer_name=explorer -split=vertical -vertical_preview<CR>
nnoremap <silent> - :<C-U>:Defx `expand('%:p:h')` -search=`expand('%:p')` -buffer-name=defx<CR>
'''
hook_post_source = '''
call defx#custom#option('_', {
\ 'winwidth': 50,
\ 'ignored_files': '.*,target*',
\ 'direction': 'topleft',
\ 'toggle': 1,
\ 'columns': 'indent:git:icons:filename:mark',
\ })
'''

[[plugins]]
repo = 'Shougo/deol.nvim'
on_cmd = 'Deol'
depends = 'denite.nvim'
on_source = ['defx.nvim', 'denite.nvim']
hook_add = '''
  nnoremap <silent> [Window]t :<C-u>Deol zsh -no-start-insert<CR>
'''
hook_source = '''
  tnoremap <ESC> <C-\><C-n>
  let g:deol#prompt_pattern = '\w*% '
  let g:deol#shell_history_path = '~/.cache/zsh/history'
  let g:deol#extra_options = {
      \ 'term_kill': 'kill',
      \ }
'''

[[plugins]]
repo = 'Shougo/deoplete.nvim'
on_event = 'InsertEnter'
hook_source = '''
source ~/.config/nvim/settings/deoplete.vimrc
call deoplete#enable()
'''

[[plugins]]
repo = 'neovim/nvim-lsp'

[[plugins]]
repo = 'Shougo/deoplete-lsp'
depends = 'nvim-lsp'

[[plugins]]
repo = 'deoplete-plugins/deoplete-jedi'
on_ft = 'python'

[[plugins]]
repo = 'davidhalter/jedi-vim'
on_ft = 'python'
hook_source = '''
let g:jedi#completions_enabled = 0
let g:jedi#use_splits_not_buffers = "right"
'''

[[plugins]]
repo = 'deoplete-plugins/deoplete-zsh'
on_ft = ['zsh', 'sh']

[[plugins]]
repo = 'pbrisbin/vim-mkdir'
on_event = 'BufNewFile'

[[plugins]]
repo = 'sillybun/vim-repl'
on_cmd = 'REPLToggle'
hook_add = '''
nnoremap [Space]r :REPLToggle<CR>
'''
hook_source = '''
let g:repl_program = {
            \   'python': 'ipython',
            \   'default': 'zsh',
            \   'r': 'R',
            \   'lua': 'lua',
            \   'vim': 'vim -e',
            \   }
let g:repl_predefine_python = {
            \   'numpy': 'import numpy as np',
            \   'matplotlib': 'from matplotlib import pyplot as plt'
            \   }
let g:repl_cursor_down = 1
let g:repl_python_automerge = 1
let g:repl_ipython_version = '7'
let g:repl_output_copy_to_register = "t"
nnoremap <leader>e :REPLSendSession<CR>
autocmd Filetype python nnoremap <F12> <Esc>:REPLDebugStopAtCurrentLine<CR>
autocmd Filetype python nnoremap <F10> <Esc>:REPLPDBN<CR>
autocmd Filetype python nnoremap <F11> <Esc>:REPLPDBS<CR>
let g:repl_position = 3
'''

[[plugins]]
repo = 'kristijanhusak/defx-icons'

[[plugins]]
repo = 'mattn/emmet-vim'
on_ft = ['html', 'vue']

[[plugins]]
repo = 'SirVer/ultisnips'
on_event = 'InsertCharPre'
depends = ['vim-snippets', 'deoplete.nvim']
hook_add = '''
let g:UltiSnipsExpandTrigger = '<C-j>'
let g:UltiSnipsJumpForwardTrigger = '<C-j>'
let g:UltiSnipsJumpBackwardTrigger = '<C-k>'
'''

[[plugins]]
repo = 'honza/vim-snippets'

[[plugins]]
repo = 'machakann/vim-sandwich'
on_event = 'CurserMoved'

[[plugins]]
repo = 'dense-analysis/ale'
on_event = 'InsertChange'

[[plugins]]
repo = 'wsdjeg/dein-ui.vim'
on_cmd = 'DeinUpdate'

[[plugins]]
repo = 'metakirby5/codi.vim'
on_cmd = 'Codi'

[[plugins]]
repo = 'hrsh7th/vim-eft'
hook_source = '''
let g:eft_ignorecase = v:true
'''
hook_add = '''
nmap ;; <Plug>(eft-repeat)
xmap ;; <Plug>(eft-repeat)
nmap f <Plug>(eft-f)
xmap f <Plug>(eft-f)
omap f <Plug>(eft-f)
nmap F <Plug>(eft-F)
xmap F <Plug>(eft-F)
omap F <Plug>(eft-F)
'''
on_map = {n = '<Plug>', x = '<Plug>', o = '<Plug>'}
